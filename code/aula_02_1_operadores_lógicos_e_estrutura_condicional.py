# -*- coding: utf-8 -*-
"""Aula 02.1 - Operadores L√≥gicos e Estrutura Condicional.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I2_OKavPehRAXni1SOPnAn-DU2bWelNV

<img src="https://www.cesar.school/wp-content/uploads/2019/09/marca_cesar_school.png" alt="drawing" width="200"/>

# Python - **Aula 02.1**

---

- Entender conceitos b√°sicos sobre programa√ß√£o;
- Operadores l√≥gicos;
- Estruturas Condicionais;

# Operadores L√≥gicos

## Operadores Relacionais

Uma condi√ß√£o √© o estabelecimento de uma rela√ß√£o l√≥gica entre dois elementos. Para definir uma rela√ß√£o l√≥gica √© necess√°rio usar operadores relacionais. Uma rela√ß√£o l√≥gica (compara√ß√£o) retorna somente os valores verdadeiro (`True`) ou falso (`False`).

* Igual a: `x == y`
* Maior que: `x > y`
* Menor que: `x < y`
* Maior ou igual a: `x >= y`
* Menor ou igual a: `x <= y`
* Diferente de: `x != y`

> Sobre uso de operadores relacionais com strings [aqui](https://careerkarma.com/blog/python-compare-strings/#:~:text=Python%20comparison%20operators%20can%20be,equal%20to%20(%20>%3D%20).).
"""

x = 10
y = 5
z = 1
print(x < y)
print(z < x)
print(z < x > y)

"""## Operadores de Identidade

Semelhante aos operadores relacionais, s√£o sem√¢nticamente mais legiveis e podem ser usados para comparar ou diferenciar, dois objetos:

- `is`
- `is not`

A diferencia primordial do uso dos operadores de identidade para os operadores relacionais √© que os primeiros avaliam tamb√©m o tipo dos dados (e a refer√™ncia):

```python
print(10.0 == 10) # True
print(10.0 is 10) # False
```

Mais detalhes sobre a diferen√ßa entre o `==` e o `is` [aqui](https://towardsdatascience.com/whats-the-difference-between-is-and-in-python-dc26406c85ad).

> Obs.: Na ordem de preced√™ncia, os operadores relacionais ficam a frente
"""

valor = 5

print(5 == 5.0)
print(5 != 5)
print(valor is 5)
print(5 is not 5.0)
print(type(5) == type(5.0))

print(type(valor) == int)

nome = 'gerson'

print(nome < 'renat√£o')
print('a' == 'A')
print(ord('g'))

novo_nome = nome
print(nome is novo_nome)

novo_nome = nome.lower() # cria uma nova string
print(nome is novo_nome)
print(nome == novo_nome)

"""## Operadores L√≥gicos

S√£o utilizados para uma mesma tomada de decis√£o que necessite de mais de uma condi√ß√£o. Tamb√©m s√£o conhecidos como operadores booleanos. Operadores l√≥gicos retornam somente os valores verdadeiro ou falso.

| Operador L√≥gico | Fun√ß√£o    | Prioridade          |
|-----------------|-----------|---------------------|
| `not`           | Nega√ß√£o   | 1                   |
| `and`           | Conjun√ß√£o | 2                   |
| `or`            | Disjun√ß√£o | 3                   |
"""

# or
idade = 12
acompanhada = True

print(idade >= 18 or acompanhada or False or False)

# and
idade = 12

print(10 <= idade and idade <= 15)
print(10 <= idade <= 15)

print(True and True)
print(True and False)
print(False or 4 > 2)

print(False or "")

print(False or bool(""))

print(bool(50))

print(False or "")

print(5 >= 5 and False and (3 > 6 or 2 > 1))

print(False or False or True or False and True)

print(False or int)

print("" or False)
print(str or False)

var = ""
print(var == "")

"""#Estruturas Condicionais

Em Python, √© poss√≠vel controlar o fluxo de execu√ß√£o do c√≥digo usando estruturas condicionais.

## Estrutura Condicional Simples

- `if`

```python
if condi√ß√£o:
  # se for verdade
```

> Obs.: Python n√£o possui marcadores de bloco expl√≠citos (como as chaves `{}`). Desta forma, os blocos s√£o definidos pela **identa√ß√£o**.
"""

nome = "gerson"

if nome == 'gerson':
    print('ta liberado')
print('fora do if')

"""## Estrutura Condicional Composta

- `if`
- `elif`
- `else`

```python
if condi√ß√£o:
  # se for verdade
else:
  # se n√£o for verdade
```

```python
if condi√ß√£o:
  # se for verdade
elif outra_condicao:
  # se a outra condi√ß√£o for verdadeira
else:
  # se n√£o for verdade
```
"""

if nome == 'Raphael':
    print('ta liberado')
else:
    print('n√£o esta liberado!')

if nome == 'Raphael':
    print('ta liberado')
elif nome == 'gerson':
    print('Gerson ta liberado')
else:
    print('n√£o esta liberado!')
# ------------------------
if nome == 'Raphael':
    print('ta liberado')
else:
    if nome == 'gerson':
        print('Gerson ta liberado')
    else:
        print('n√£o esta liberado!')



"""## Shorthand

`if`:

```python
if (condi√ß√£o): (caso verdadeiro)
```

`if else`:

```python
(caso verdadeiro) if (condi√ß√£o) else (caso falso)
```
"""

print('deu certo') if nome == 'gerson' else print('deu errado')
# print deu certo se o nome for igual a gerson, se n√£o print deu errado
# nome = 'gerson' ? print('deu certo') : print('deu errado')
valor = 30 if nome == 'gerson' else 28
print(valor)

"""# Exerc√≠cios Fundamentais

1. Informe a sa√≠da das seguintes express√µes:

a)
```python
3 < 8 # True
```

b)
```python
a = 12
b = a - 10
a > b
```

c)
```python
16 != 16
```

d)
```python
2 < 5 > 10
```

e)
```python
3 <= 5 >= 2
```
"""

print(3 < 8)

a = 12
b = a - 10
print(a > b)
print(16 != 16)
print(2 < 5 > 10)
print(3 <= 5 >= 2)

"""2. Verifique se as igualdades abaixo s√£o verdadeiras:

a) $2 \times 2.0 = 4$
"""

2 * 2.0 == 4

"""b) $2 \times 3 = 5$"""

2 * 2 == 5

"""c) $4a + 3 = b$, para $a=3$ e $b=15$

P.S.: primeiro declare as vari√°veis `a` e `b`
"""

a = 3
b = 15
4 * a + 3 == b

"""3. Fa√ßa um programa que calcule as ra√≠zes de uma equa√ß√£o do segundo grau, na forma `ax¬≤ + bx + c`. O programa dever√° pedir os valores de a, b e c e fazer as consist√™ncias, informando ao usu√°rio nas seguintes situa√ß√µes:

a) Se o usu√°rio informar o valor de A igual a zero, a equa√ß√£o n√£o √© do segundo grau e o programa n√£o deve pedir os demais valores, sendo encerrado;

b) Se o delta calculado for negativo, a equa√ß√£o n√£o possui raizes reais. Informe ao usu√°rio e encerre o programa;

c) Se o delta calculado for igual a zero a equa√ß√£o possui apenas uma raiz real; informe-a ao usu√°rio;

d) Se o delta for positivo, a equa√ß√£o possui duas raiz reais; informe-as ao usu√°rio;
"""

a = int(input('Insira o valor de a: '))

if a != 0:

  b = int(input('Insira o valor de b: '))
  c = int(input('Insira o valor de c: '))

  d = b**2 - 4*a*c

  if d < 0:
    print('O delta √© negativo, logo a equa√ß√£o n√£o possui raizes reais')
  else:
    x1 = (-b + d**(1/2)) / (2*a)
    print(f"x' = {x1}")

    if d == 1:
      x2 = (-b - d**(1/2)) / (2*a)
      print(f"x'' = {x2}")

"""4. Fa√ßa um Programa que pe√ßa um n√∫mero correspondente a um determinado ano e em seguida informe se este ano √© ou n√£o bissexto."""

ano = int(input('Informe o ano: '))

if (ano % 4 == 0 and ano % 100 != 0) or (ano % 400 == 0):
    print(f'{ano} √© um ano bissexto')
else:
    print(f'{ano} n√£o √© um ano bissexto')

"""5. Fa√ßa um Programa que pe√ßa uma data no formato dd/mm/aaaa e determine se a mesma √© uma data v√°lida."""

dia, mes, ano = 28, 9, 2021

if 0 < dia <= 31 and 0 < mes < 12:
  print(dia, mes, ano)

if 0 < dia <= 31:
  if 0 < mes < 12:
    if (mes == 2 or mes == 9 or mes == 12) and dia <= 28:

dia = int(input("Dia: "))
mes = int(input("Mes: "))
ano = input("Ano: ")

validade = False

if (mes==1 or mes==3 or mes == 5 or mes==7 or mes==8 or mes==10 or mes==12):
  if (0 < dia <= 31):
    validade = True
elif (mes==4 or mes==6 or mes==9 or mes==11):
  if (0 < dia <= 30):
    validade = True
elif mes==2:
  if ((ano%4==0 and ano%100 != 0) or (ano%400==0)):
    if (0 < dia <= 29):
      validade = True
  elif (0 < dia <= 28):
    validade = True

if (validade):
  print(f"Data v√°lida: {dia}/{mes}/{ano}")

from datetime import datetime

data = input('Insira uma data no formato dd/mm/AAAA: ')

try:
  datetime.strptime(data, '%d/%m/%Y')
  print('Data v√°lida üëç')
except:
  print('Data inv√°lida üõë')

print('testando')

"""6. Fa√ßa um Programa que leia um n√∫mero e exiba o dia correspondente da semana. (1-Domingo, 2- Segunda, etc.), se digitar outro valor deve aparecer valor inv√°lido."""

dias = ['Domingo', 'Segunda', 'Ter√ßa', 'Quarta', 'Quinta', 'Sexta', 'S√°bado']
dia = int(input('Insira um n√∫mero para o dia: '))

if 0 < dia <= 7:
  print(dias[dia-1])
else:
  print('üõë Dia inv√°lido!')

"""7. Crie um programa para um circo, no qual dada a idade de uma pessoa, seja indicado o valor do ingresso segundo as regras:

a) A entrada para qualquer pessoa com menos de 4 anos ou maior que 60 √© gratuita;

b) a entrada para qualquer pessoa com idade entre 4 e 18 custa 20 reais;

c) a entrada para qualquer pessoa com 18 ou mais custa 30 reais;

d) estudantes e professores pagam meia-entrada.
"""

idade = int(input('Insira a idade: '))
est_prof = True if input('√â estudante ou professor? ').lower() == 'sim' else False

ingresso = 0.0

if 4 <= idade <= 18:
  ingresso = 20.0
elif 18 < idade < 60:
  ingresso = 30.0

if est_prof and ingresso != 0:
  ingresso /= 2

print(f'Valor do ingresso a ser pago: R${ingresso:.2f}')

"""8. Complete o c√≥digo na c√©lula abaixo para imprimir uma mensagem informando se um aluno foi aprovado ou reprovado em uma disciplina com base em sua nota final. A nota m√≠nima necess√°ria para aprova√ß√£o √©  5 ."""

notaAluno = 0 # insira aqui a nota do aluno

# Complete o c√≥digo abaixo
if notaAluno >= 5:
    print("Aprovado")
else:
    print("Reprovado")

"""9. Construa uma pequena **chave dicot√¥mica** para identificar uma determinada planta como membro de um dos principais grupos: *Bryophyta*, *Pteridophyta*, *Gymnospermae* ou *Angiospermae*.
A identifica√ß√£o se d√° com base na presen√ßa (1) ou aus√™ncia (0) de tr√™s caracteres: **vasculariza√ß√£o**, **sementes** e **flores**.
Utilize a tabela abaixo como refer√™ncia.

| Grupo | Vasculariza√ß√£o| Sementes| Flores |
|--|--|--|--|
| Bryophyta | 0 | 0 | 0 |
| Pteridophyta | 1| 0 | 0 |
| Gymnospermae | 1 | 1 | 0 |
| Angiospermae | 1 | 1 | 1 |
"""

# Estas vari√°veis armazenam a presen√ßa (1) ou aus√™ncia (0) de cada caractere
vasc = 0
sem = 0
flor = 0

# Seu c√≥digo aqui
if flor:
  tipo = "Angiospermae"
else:
  if sem:
    tipo = "Gymnospermae"
  else:
    tipo = "Pteridophyta" if vasc else "Bryophyta"

print(tipo)

# Estas vari√°veis armazenam a presen√ßa (1) ou aus√™ncia (0) de cada caractere
vasc = 1
sem = 0
flor = 0

# Seu c√≥digo aqui
b = ['Bryophyta', 0, 0, 0]
p = ['Pteridophyta', 1, 0, 0]
g = ['Gymnospermae', 1, 1, 0]
a = ['Angiospermae', 1, 1, 1]

cd = [b, p, g, a]

especie = [vasc, sem, flor]
for opcao in cd:
  if especie == opcao[1:]:
    print(opcao[0])

"""10. Um posto est√° vendendo combust√≠veis com a seguinte tabela de descontos:

a. √Ålcool:

    at√© 20 litros, desconto de 3% por litro
    acima de 20 litros, desconto de 5% por litro

b. Gasolina:

    at√© 20 litros, desconto de 4% por litro
    acima de 20 litros, desconto de 6% por litro

Escreva um algoritmo que leia o n√∫mero de litros vendidos, o tipo de combust√≠vel (codificado da seguinte forma: A-√°lcool, G-gasolina), calcule e imprima o valor a ser pago pelo cliente sabendo-se que o pre√ßo do litro da gasolina √© 2.50 o pre√ßo do litro do √°lcool √© 1,90.
"""

litros = float(input("Digite quantos litros voc√™ quer abastecer: "))
combustivel = input("Digite A para √°lcool ou G para gasolina: ")
preco = 0
if combustivel == "A" or combustivel == "a":
    preco = litros * 1.9
    if litros <= 20:
        preco -= 1.9 * litros * 3 / 100
    else:
        preco -= 1.9 * litros * 5 / 100
elif combustivel == "G" or combustivel == "g":
    preco = litros * 2.5
    if litros <= 20:
        preco -= 2.5 * litros * 4 / 100
    else:
        preco -= 2.5 * litros * 6 / 100
print(f"O pre√ßo a pagar √© R${preco:.2f}")

"""11. Fa√ßa um Programa que leia 2 n√∫meros e em seguida pergunte ao usu√°rio qual opera√ß√£o ele deseja realizar. O resultado da opera√ß√£o deve ser acompanhado de uma frase que diga se o n√∫mero √©:

a. par ou √≠mpar;

b. positivo ou negativo;

c. inteiro ou decimal.
"""

numero_1 = float(input("Digite o primeiro numero: "))
numero_2 = float(input("Digite o segundo numero: "))
op = input("Qual opera√ß√£o tu vai realizar (+,-): ")

resultado = 0
if op == '+':
  resultado = numero_1 + numero_2
elif op == '-':
    resultado = numero_1 - numero_2

print("Resultado da opera√ß√£o √© {}".format(resultado))

par = int(resultado) % 2 == 0
if par:
  print("O resultado da sua opera√ß√£o resultou em numero par")
else:
  print("O resultado da sua opera√ß√£o resultou em numero impar")

positivo = resultado >=0
if positivo:
  print("O resultado da sua opera√ß√£o resultou em numero positivo")
else:
  print("O resultado da sua opera√ß√£o resultou em numero negativo")

inteiro = resultado-int(resultado) == 0
# inteiro = resultado % 1 == 0
if inteiro:
  print("O resultado da sua opera√ß√£o resultou em numero inteiro")
else:
  print("O resultado da sua opera√ß√£o resultou em numero decimal")